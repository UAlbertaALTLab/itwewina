{# This entry is evaluated on a translation-group by translation-group
   basis, and so far only receives the `translation_group` <tg /> node.

   The intent here is to make it easier to insert additional text
   without needing to alter or understand the larger amount of HTML. See
   `sme` for an example of including the @reg attribute.

 #}

{%- macro render_annotation(tg) -%}
    {# Render the annotation (<re />) node, unless it has a @fra_ref. #}
    {%- set annotations = tg.xpath('./re') %}
    {% set fra_ref = tg.xpath('./re/@fra_ref')|count > 0 %}

    {% if annotations|count > 0 and not fra_ref %}
        ({{ annotations[0].text }})
    {% endif -%}
{%- endmacro -%}

{%- macro render_link(tg, t) -%}
    {# Render a link to the detailed page. One exception: if the lexicon
    annotation entry contains a @fra_ref attribute, then we make a
    reference link, inserting this attribute's value in as a parameter. 

         <tg xml:lang="sme">
            <re fra_ref="omtopersoner">om to personer</re>
            <t/>
         </tg>

         -->

         <l pos="Pron"
            type="Recipr"
            orig_entry="hverandre"
            til_ref="omtopersoner">hverandre: om to personer</l>
    
    #}

    {% set text = t.text %}
    {% set link_target = '' %}
    {% set fra_ref = tg.xpath('./re/@fra_ref') %}

    {% if fra_ref|count > 0 %}
        {# If this is a reference link, then there is no data in the
           <t /> node, so the <re /> becomes the link text.  #}

        {% set annotations = tg.xpath('./re') %}
        {% set reference = fra_ref|join('') %}
        {% set text = annotations[0].text %}
    {% else %}
        {% set reference = false %}
    {% endif %}

    {% if reference %}
        <a href="{{ url_for('.search_pair_referred_search', _from=_from, _to=_to) }}?l_til_ref={{ reference }}">
            {{- text -}}
        </a> &rarr;
    {%- else %}
        {# NB: swap from and to for these links since these are definitions. #}
        <a href="{{ url_for('.detailed_language_pair_search', _from=_to, _to=_from, wordform=text, format='html') }}?no_compounds=true&lemma_match=true">
            {{- text -}}
        </a>
    {%- endif %}
{%- endmacro -%}

{%- macro render_sources(t) -%}
    {# Render the title(s) of the source(s) of this <t> translation.  #}
    {% set entry_sources = t|source_titles %}
    {% if entry_sources|length > 0 %}
    <ul class="sources">
       {% for source in entry_sources %}
       <li class="entry_source">{{ source }}</li>
       {% endfor %}
    </ul>
    {% endif %}
{%- endmacro -%}

{%- macro render_tg(tg) -%}
    {# Render all the texts as individual links, followed by a potential
    annotation. #}

    {% for t in tg.xpath('./t') %}
        {{ render_link(tg, t) -}}{% if not loop.last %}, {% endif %}
    {% endfor %}

    {{- render_annotation(tg) -}}
{%- endmacro -%}

{%- if translation_group -%}
    <span lang="{{ _to }}">{{ render_tg(translation_group) }}</span>
    {%- if translation_group.xpath('./t/@sources')|length > 0 -%}
        {%- for t in translation_group -%}
            {{ render_sources(t) }}
        {%- endfor -%}
    {%- endif -%}
{%- endif -%}

{#  vim: set ts=4 sw=4 tw=72 syntax=htmljinja : #}
