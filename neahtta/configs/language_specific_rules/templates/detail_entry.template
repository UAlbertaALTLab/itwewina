{# This is the main entry template that is called each time in the loop
   of main page entry results. Variables are passed in for the
   `lexicon_entry`, and morphological `analyses`.

   Some of the work here is sent out to `definition.template`.

   If you need to override this template, keep in mind that there is a
   somewhat specific structure as relates to Twitter Bootstrap, however
   the freedom that is available is that everything must be within:

       <div class="row-fluid entry_row" />

#}

{%- import "lexicon.macros" as macros with context -%}
<div class="row-fluid entry_row">
    <div class="span9 lexeme" data-recording-word-forms="{{
            recording_word_forms | join(',')
        }}"{#

        Provide comma-separated word forms from the paradigm so that the JS on the page can request some
        word forms from the Recording Validation App. The recording app uses comma-separated word forms as
        its query: https://github.com/UAlbertaALTLab/recording-validation-interface#web-api

        See audio_links.js and views/search.py.
     #}>
        {% if lexicon_entry|count > 0 %}
            <div class="pull-right hidden-phone floatingparadigm">
                {% if current_app_config.paradigm_layouts and layout %}
                    {{- rendered_templates.paradigm_layouts -}}
                {% else %}
                    {% if current_pair_settings.asynchronous_paradigms %}
                        {{- rendered_templates.asynchronous_paradigm -}}
                    {% else %}
                        {{- rendered_templates.paradigm -}}
                    {% endif %}
                {% endif %}
            </div>
            <p class="lead">
                {{- rendered_templates.entry_text -}}
            </p>
            {# TODO: figure out how this works for dictionaries without <source> elements #}
            <ul class="meanings">
                {{- rendered_templates.definition -}}
            </ul>

            {% set entry_sources = lexicon_entry|xpath('@src') %}
            {% if entry_sources|length > 0 %}
            <ul class="sources">
               {% for source in entry_sources %}
               <li class="entry_source">{{ source }}</li>
               {% endfor %}
            </ul>
            {% endif %}
            <div class="span3 visible-phone hidden-tablet hidden-desktop floatingparadigm">
                <div class="row-fluid">
                    {%- set lemma_key = lexicon_entry|xpath('lg/l')|first|text %}

                    <div class="span6">
                        <button href="#"
                                class="btn btn-info pull-right"
                                data-toggle="collapse"
                                data-target="#paradigm-{{ lexicon_entry|hash_node }}"
                                type="button"
                                lang="{{ current_locale }}">
                            {% trans %}Paradigm{% endtrans %}
                        </button>
                    </div>
                    <div class="span6">
                        <div class="paradigm-expanded collapse" id="paradigm-{{ lexicon_entry|hash_node }}">
                            {% if current_app_config.paradigm_layouts and layout %}
                                {{- rendered_templates.paradigm_layouts -}}
                            {% else %}
                                {% if current_pair_settings.asynchronous_paradigms %}
                                    {{- rendered_templates.asynchronous_paradigm -}}
                                {% else %}
                                    {{- rendered_templates.paradigm -}}
                                {% endif %}
                            {% endif %}
                        </div>
                    </div>
                </div>
            </div>
        {% else %}&nbsp;{% endif %}
    </div>
    <div class="span3 hidden-phone">
        {{- rendered_templates.analyses -}}
    </div>
</div>

{# vim: set ts=4 sw=4 tw=72 syntax=jinja : #}

