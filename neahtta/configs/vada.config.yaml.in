ApplicationSettings:
  app_name: "Neahttadigisánit"
  app_meta_title: "Neahttadigisánit"
  short_name: "vada"
  default_locale: "yrk"
  default_pair: ["yrk", "fin"]
  mobile_default_pair: false
  locales_available:
    - yrk
    - fi
    - en
  meta_description: >
      Free online, mobile friendly dictionaries for Nenets
  meta_keywords: >
      nenets, nenetsi, mobile, dictionary, free, russian
  admins_to_email:
    - "rueter.jack@gmail.com"
    - "trond.trosterud@uit.no"

Tools:
  xfst_lookup: &LOOKUP '/usr/bin/lookup'
  opt: &OPT '/opt/smi/'

Morphology:
  yrk:
    tool: *LOOKUP
    file: [*OPT, '/yrk/bin/analyser-dict-gt-desc.xfst']
    inverse_file: [*OPT, '/yrk/bin/generator-dict-gt-norm.xfst']
    format: 'xfst'
    options:
      compoundBoundary: "+Use/Circ#"
      derivationMarker: "+Der"
      tagsep: '+'
      inverse_tagsep: '+'
  fin:
    tool: *LOOKUP
    file: [*OPT, '/fin/bin/analyser-dict-gt-desc.xfst']
    inverse_file: [*OPT, '/fin/bin/generator-dict-gt-norm.xfst']
    format: 'xfst'
    options:
      compoundBoundary: "+Use/Circ#"
      derivationMarker: "+Der"
      tagsep: '+'
      inverse_tagsep: '+'

Languages:
  - iso: yrk
    minority_lang: true
  - iso: eng
  - iso: fin
  - iso: rus

Dictionaries:
  - source: yrk
    target: eng
    path: 'dicts/yrk-all.xml'

  - source: yrk
    target: fin
    path: 'dicts/yrk-all.xml'

  - source: fin
    target: yrk
    path: 'dicts/finyrk.xml'

ReaderConfig:
  Settings:
    # host path without scheme (https, http) to reader lookup API, no trailing
    # slash.
    api_host: "sanit.oahpa.no/reader/vada"
    # URL to serve media from, minus scheme, and no trailing slash.
    media_host: "sanit.oahpa.no"
  yrk:
    multiword_lookups: false
    # multiword_list:
    #   # File format-- plain text, but line coments allowed:
    #   # Use %WORD% as a marker for any word these may co-occur with, i.e., if
    #   # the user clicks on a %WORD%, then search for these environments too.
    #   file: "configs/language_specific_rules/reader/hdn_multiwords.txt"
    # NB: this is JavaScript format, since it will be sent to the reader via
    # config. It must also be stored as a string.
    #
    # JavaScript is problematic with unicode, and \w in a regex ends up meaning
    # just the ASCII range, thus it's necessary to be very explicit.
    #
    # Also this example shows how to include periods and apostrophes in
    # word unit detection.
    #
    # http://regexpal.com/
    #
    # apostrophes don't yet want to work on a word boundary, but also
    # http://nvinder.ru/rubric/yalumd uses different characters. 
    word_regex: |
      [\u00C0-\u1FFF\u2C00-\uD7FF\w\"\'’’]+
    word_regex_opts: "g"
