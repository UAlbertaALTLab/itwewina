# Non-linguistic settings.
ApplicationSettings:
  # `app_name` is what is displayed in the upper-left corner on every page.
  app_name: "Cuvântul"

  # This will be the same name as PROJNAME, which is also the file name, and
  # potentially the subdomain.
  short_name: "cuvantul"

  # This will be the default bookmark title suggested to the user, does
  # not have to resemble the app name, or anything, and the following is
  # just a suggestion.
  mobile_bookmark_name: "NDS: Cuvântul"
  default_locale: "ro"
  default_pair: ["ron", "nob"]
  mobile_default_pair: ["ron", "nob"]

  # ## Some optional display settings. Setting these to `true` enables them.
  #
  # `grouped_nav` enables navigation to be sorted into groups by minority
  # language. This is recommended for projects with lots of language pairs and
  # dictionaries.
  #
  grouped_nav: false
  # 
  # Also recommended for larger projects is the following setting. This uses a
  # different mobile menu style, which has esparate submenus for language
  # groups, dictionaries, and subsequently variants (if there are any).
  #
  new_mobile_nav: false

  # 
  # These are the people who will be emailed when there is an error. NB:
  # it may be useful to use aliases, e.g., my.email+alias@gmail.com in
  # order to make filtering errors more easy.
  admins_to_email:
    - "ciprian.gerstenberger@uit.no"
  #
  # Use three-character ISO codes only when there is no corresponding
  # two-character ISO for the language.
  locales_available:
    - "ro"
    - "no"
    - "en"
  # Meta description and keywords for Google search results.
  app_meta_title: >
     Cuvântul online 
  meta_description: >
     Free, mobile-friendly dictionaries for Romanian and Aromanian.
  meta_keywords: >
     romanian, aromanian

# For default locals, these must correspond with what exists in the
# translations/ directory. In the case of languages with a 2-character ISO, use
# this, instead of the 3-character ISO. There is no connection between these
# settings and language pair names however, so those may be kept in 3-character
# format.


##
### Linguistic settings
##

# 
# Some helpful aliases for paths below.
Tools:
  xfst_lookup: &LOOKUP '/Users/cipriangerstenberger/local/bin/lookup'
  opt: &OPT '/Users/cipriangerstenberger/main/langs'

# Note that YAML doesn't support concatenating strings directly, 
# so in this case I use list notation. See the examples below.
#
# To avoid repeating, feel free to set aliases for things like
# shared FST format settings (as demonstrated with `&sme_fst_options` and 
# `<<: *sme_fst_options`. This is a YAML alias pattern.

Morphology:
  # This is the default setup for sme.
  ron:
    tool: *LOOKUP
    file: [*OPT, '/ron/src/analyser-dict-gt-desc.xfst']
    inverse_file: [*OPT, '/ron/src/generator-dict-gt-norm.xfst']
    format: 'xfst'
    options:
      compoundBoundary: "+Cmp#"
      derivationMarker: "+Der"
      tagsep: '+'
      inverse_tagsep: '+'
  # This is an example of an input variant. Here we use a different analyzer,
  # but the same generator. Also, `options` are copied from above.
#  roMe:
#    tool: *LOOKUP
#    file: [*OPT, '/ron/bin/analyser-dict-gt-desc-mobile.xfst']
#    inverse_file: [*OPT, '/ron/bin/generator-dict-gt-norm.xfst']
#    format: 'xfst'
#    options:
#      <<: *ron_fst_options
  nob:
    tool: *LOOKUP
    file: [*OPT, '/nob/src/analyser-gt-desc.xfst']
    inverse_file: [*OPT, '/nob/src/generator-gt-norm.xfst']
    format: 'xfst'
    options:
      compoundBoundary: "#+Cmp+"
      derivationMarker: "+Der"
      tagsep: '+'
      inverse_tagsep: '+'

# For now, make sure that all languages that will be available are
# defined here.  example, if only one dictionary file is defined,
# `sme-nob`, there will still need to be a definition for language names
# for `nob`.
#
Languages:
  - iso: ron
    # this ensures that if there are multiple minority languages in a project,
    # that they will be sorted into groups by this status. Input variants do
    # not need this marking.
    minority_lang: False 

#  - iso: roMe
#    variant: True # this makes the fab process skip attempting `svn up` here.

  - iso: nob

# Here are the actual definitions of what dictionaries are available in the
# system. What is presented in the UI also adheres to the order that is here.
#
# The first pair example here is very complex, and includes mobile spell-relax
# and Korp integration. A minimal example follows in the next definition.
#
Dictionaries:
  - source: ron
    target: nob
    path: 'dicts/ronnob.xml'
    reversable: True
    
    # Following are some optional settings for integration with Korp.
    # default is False
    show_korp_search: False
    # If there are any input variants, specify this. NB: 'standard' and
    # 'mobile' are special values for `type`, and used in presenting
    # mobile users the correct default pair. If a variant is anything
    # other than the standard or mobile, use something else.
    #
    # Note that it's also a good idea to mark the strings here with
    # the gettext marker, so that they're translated.
    #
    # use http://meyerweb.com/eric/tools/dencoder/ if things are
    # unreadable or do not work
    #
    # Here, whatever the user input is will be replaced into the
    # following string, marked by USER_INPUT
    wordform_search_url: &alt_korp_search 
      "http://gtweb.uit.no/korp/#search=word%7CUSER_INPUT&page=0"
    #
    # Here, whatever the input lemma is will be replaced into the
    # following string, marked by INPUT_LEMMA
    #
    # cqp|[lemma = "INPUT_LEMMA"]
    lemma_search_url: &korp_lemma_search 
      "http://gtweb.uit.no/korp/#page=0&search-tab=2&search=cqp%7C%5Blemma%20%3D%20%22INPUT_LEMMA%22%5D"
    # "] [word = "
    lemma_multiword_delimiter: &korp_lemma_delim 
      "%22%5D%20%5Bword%20%3D%20%22"

  # This is the most minimal example of what is needed.
  - source: nob
    target: ron
    path: 'dicts/nobron.xml'

# Everything after this point is optional. You may delete them if you do not
# need them.

