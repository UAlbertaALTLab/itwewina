ApplicationSettings:
  app_name: "Neahttadigisánit"
  short_name: "gawonisdi"
  # This will be the default bookmark title suggested to the user, does
  # not have to resemble the app name, or anything, and the following is
  # just a suggestion.
  mobile_bookmark_name: "NDS: Gawonisdi"
  new_style_templates: true
  default_locale: "en"
  default_pair: ["chr", "eng"]
  mobile_default_pair: false # ["chrM", "eng"]
  # These are the people who will be emailed when there is an error. NB:
  # it may be useful to use aliases, e.g., my.email+alias@gmail.com in
  # order to make filtering errors more easy.
  admins_to_email:
    - "lene.antonsen@uit.no"
    - "trond.trosterud@uit.no"
  locales_available:
    - en
  # Meta description and keywords for Google search results.
  app_meta_title: >
     Online Cherokee Dictionary
  meta_description: >
     Free, mobile-friendly dictionaries for Cherokee
  meta_keywords: >
     cherokee dictionary, cherokee verb inflections

Tools:
  xfst_lookup: &LOOKUP '/usr/bin/lookup'
  gthome: &GTHOME '/home/neahtta/gtsvn'
  opt: &OPT '/opt/smi'

Morphology:
  chr:
    tool: *LOOKUP
    file: [*OPT, '/chr/bin/analyser-dict-gt-desc.xfst']
    inverse_file: [*OPT, '/chr/bin/generator-dict-gt-norm.xfst']
    format: 'xfst'
    options: &chr_fst_options
      compoundBoundary: "+Cmp#"
      derivationMarker: "+Der"
      tagsep: '+'
      inverse_tagsep: '+'

Languages:
  - iso: chr
  - iso: eng

Dictionaries:
  - source: chr
    target: eng
    path: 'dicts/chr-all.xml'
    # This key may be present and set to True and False, or missing--
    # default is False
    show_korp_search: True
    # If there are any input variants, specify this. NB: 'standard' and
    # 'mobile' are special values for `type`, and used in presenting
    # mobile users the correct default pair. If a variant is anything
    # other than the standard or mobile, use something else.
    #
    # Note that it's also a good idea to mark the strings here with
    # the gettext marker, so that they're translated.
    # input_variants:
    #   - type: "standard"
    #     description: !gettext "Standard" 
    #     # Standárda 
    #     example: "(<em>áčđŋšŧž</em>)"
    #     short_name: "sme"
    #   - type: "mobile"
    #     description: !gettext "Sosiála media"
    #     # example: !gettext "(maiddái <em>acdnstz</em>)"
    #     example: !gettext "(incl. <em>acdnstz</em>)"
    #     short_name: "SoMe"

ReaderConfig:
  chr:
    multiword_lookups: false
    # NB: this is JavaScript format, since it will be sent to the reader via
    # config. It must also be stored as a string.
    #
    # JavaScript is problematic with unicode, and \w in a regex ends up meaning
    # just the ASCII range, thus it's necessary to be very explicit.
    #
    # Also this example shows how to include periods and apostrophes in
    # word unit detection.
    #
    # http://regexpal.com/
    #
    word_regex: |
      [\u00C0-\u1FFF\u2C00-\uD7FF\w]+
    word_regex_opts: "g"
