ApplicationSettings:
  app_name: "Neahttadigisánit"
  app_meta_title: "Neahttadigisánit"
  short_name: "saan"
  default_locale: "sms"
  default_pair: ["sms", "fin"]
  mobile_default_pair: false
  # TODO: language-specific sets
  onscreen_keyboard:
    sms: &SMS_KEYS
      - "á"
      - "â"
      - "õ"
      - "č"
      - "đ"
      - "ŋ"
      - "š"
      - "ž"
      - "ǥ"
      - "ǧ"
      - "ǩ"
      - "ǯ"
    smsM: *SMS_KEYS
  locales_available:
    - "sms"
    - "fi"
    - "en"
    - "no"
    - "ru"
  meta_description: >
      Free online, mobile friendly dictionaries for Skolt Saami
  meta_keywords: >
      skolt saami, koltansaame, mobile, dictionary, free, russian

Tools:
  xfst_lookup: &LOOKUP '/usr/bin/lookup'
  opt: &OPT '/opt/smi/'

Morphology:
  sms:
    tool: *LOOKUP
    file: [*OPT, '/sms/bin/analyser-dict-gt-desc.xfst']
    inverse_file: [*OPT, '/sms/bin/generator-dict-gt-norm.xfst']
    format: 'xfst'
    options:
      compoundBoundary: "+Use/Circ#"
      derivationMarker: "+Der"
      tagsep: '+'
      inverse_tagsep: '+'
  smsM:
    tool: *LOOKUP
    file: [*OPT, '/sms/bin/analyser-dict-gt-desc-mobile.xfst']
    inverse_file: [*OPT, '/sms/bin/generator-dict-gt-norm.xfst']
    format: 'xfst'
    options:
      compoundBoundary: "+Use/Circ#"
      derivationMarker: "+Der"
      tagsep: '+'
      inverse_tagsep: '+'
  fin:
    tool: *LOOKUP
    file: [*OPT, '/fin/bin/analyser-dict-gt-desc.xfst']
    inverse_file: [*OPT, '/fin/bin/generator-dict-gt-norm.xfst']
    format: 'xfst'
    options:
      compoundBoundary: "+Use/Circ#"
      derivationMarker: "+Der"
      tagsep: '+'
      inverse_tagsep: '+'

Languages:
  - iso: sms
    minority_lang: true
  - iso: eng
  - iso: fin
  - iso: rus
  - iso: nob

Dictionaries:
  - source: sms
    target: fin
    path: 'dicts/sms2X.xml'
    input_variants: &spell_relax
      - type: "standard"
        description: !gettext "Standard"
        example: "(ǩ)"
        # NB: must be same as analyser name
        short_name: "sms"
      - type: "mobile"
        description: !gettext "Mobile friendly"
        example: "(k &rarr; k ~ ǩ)"
        short_name: "smsM"
  - source: sms
    target: eng
    path: 'dicts/sms2X.xml'
    input_variants: *spell_relax
  - source: sms
    target: rus
    path: 'dicts/sms2X.xml'
    input_variants: *spell_relax
  - source: sms
    target: nob
    path: 'dicts/sms2X.xml'
    input_variants: *spell_relax

ReaderConfig:
  sms:
    multiword_lookups: false
    # NB: this is JavaScript format, since it will be sent to the reader via
    # config. It must also be stored as a string.
    #
    # JavaScript is problematic with unicode, and \w in a regex ends up meaning
    # just the ASCII range, thus it's necessary to be very explicit.
    #
    word_regex: |
      [\u00C0-\u1FFF\u2C00-\uD7FF\w´]+
    word_regex_opts: "g"

